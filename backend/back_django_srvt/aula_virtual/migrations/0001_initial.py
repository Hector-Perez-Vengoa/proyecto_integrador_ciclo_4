# Generated by Django 5.2.1 on 2025-07-06 20:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AulaVirtual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único del aula virtual', max_length=20, unique=True)),
                ('estado', models.CharField(choices=[('disponible', 'Disponible'), ('reservada', 'Reservada'), ('en_uso', 'En Uso'), ('en_mantenimiento', 'En Mantenimiento'), ('inactiva', 'Inactiva'), ('bloqueada', 'Bloqueada')], default='disponible', max_length=20)),
                ('descripcion', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Aula Virtual',
                'verbose_name_plural': 'Aulas Virtuales',
                'db_table': 'aula_virtual',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='AulaVirtualComponente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del componente', max_length=100)),
                ('descripcion', models.TextField(blank=True)),
                ('aula_virtual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='componentes', to='aula_virtual.aulavirtual')),
            ],
            options={
                'verbose_name': 'Componente de Aula Virtual',
                'verbose_name_plural': 'Componentes de Aulas Virtuales',
                'db_table': 'aula_virtual_componente',
                'ordering': ['aula_virtual', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='AulaVirtualImagen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_imagen', models.URLField(help_text='URL de la imagen', max_length=500)),
                ('nombre_archivo', models.CharField(blank=True, max_length=255)),
                ('descripcion', models.CharField(blank=True, max_length=255)),
                ('es_principal', models.BooleanField(default=False, help_text='Indica si es la imagen principal')),
                ('orden_visualizacion', models.PositiveIntegerField(default=1, help_text='Orden de visualización')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
                ('aula_virtual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagenes', to='aula_virtual.aulavirtual')),
            ],
            options={
                'verbose_name': 'Imagen de Aula Virtual',
                'verbose_name_plural': 'Imágenes de Aulas Virtuales',
                'db_table': 'aula_virtual_imagen',
                'ordering': ['aula_virtual', 'orden_visualizacion'],
            },
        ),
        migrations.CreateModel(
            name='BloqueHorario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('tipo', models.CharField(choices=[('disponible', 'Disponible'), ('bloqueado', 'Bloqueado'), ('mantenimiento', 'Mantenimiento')], default='disponible', max_length=20)),
                ('motivo', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('aula_virtual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloques_horarios', to='aula_virtual.aulavirtual')),
            ],
            options={
                'verbose_name': 'Bloque Horario',
                'verbose_name_plural': 'Bloques Horarios',
                'db_table': 'bloque_horario',
                'ordering': ['fecha', 'hora_inicio'],
                'unique_together': {('aula_virtual', 'fecha', 'hora_inicio', 'hora_fin')},
            },
        ),
        migrations.CreateModel(
            name='CalendarioInstitucional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True)),
                ('tipo_evento', models.CharField(choices=[('feriado', 'Feriado'), ('mantenimiento', 'Mantenimiento'), ('evento_especial', 'Evento Especial'), ('suspension_clases', 'Suspensión de Clases')], max_length=30)),
                ('fecha_inicio', models.DateTimeField()),
                ('fecha_fin', models.DateTimeField()),
                ('afecta_reservas', models.BooleanField(default=True, help_text='Indica si afecta la disponibilidad de reservas')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('aulas_afectadas', models.ManyToManyField(blank=True, related_name='eventos_calendario', to='aula_virtual.aulavirtual')),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Evento de Calendario',
                'verbose_name_plural': 'Eventos de Calendario',
                'db_table': 'calendario_institucional',
                'ordering': ['fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Reglamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Título del reglamento', max_length=200)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción del reglamento')),
                ('tipo', models.CharField(choices=[('general', 'General'), ('academico', 'Académico'), ('disciplinario', 'Disciplinario'), ('administrativo', 'Administrativo'), ('tecnico', 'Técnico')], default='general', max_length=20)),
                ('version', models.CharField(help_text='Versión del reglamento', max_length=20)),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('revision', 'En Revisión'), ('activo', 'Activo'), ('inactivo', 'Inactivo'), ('archivado', 'Archivado')], default='borrador', max_length=20)),
                ('ruta_archivo', models.CharField(blank=True, help_text='Ruta del archivo', max_length=500)),
                ('tamano_archivo', models.BigIntegerField(blank=True, help_text='Tamaño del archivo en bytes', null=True)),
                ('autor', models.CharField(blank=True, help_text='Autor del reglamento', max_length=100)),
                ('es_obligatorio', models.BooleanField(default=False, help_text='Indica si la lectura es obligatoria')),
                ('contador_visualizaciones', models.BigIntegerField(default=0)),
                ('contador_descargas', models.BigIntegerField(default=0)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('metadatos', models.TextField(blank=True, help_text='Metadatos adicionales en formato JSON')),
            ],
            options={
                'verbose_name': 'Reglamento',
                'verbose_name_plural': 'Reglamentos',
                'db_table': 'reglamento',
                'ordering': ['-fecha_modificacion'],
                'indexes': [models.Index(fields=['estado', 'tipo'], name='reglamento_estado_c4fe07_idx'), models.Index(fields=['es_obligatorio'], name='reglamento_es_obli_c2a950_idx')],
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('fecha_reserva', models.DateField()),
                ('motivo', models.TextField(blank=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmada', 'Confirmada'), ('en_uso', 'En Uso'), ('completada', 'Completada'), ('cancelada', 'Cancelada'), ('no_presentado', 'No Presentado')], default='pendiente', max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_cancelacion', models.DateTimeField(blank=True, null=True)),
                ('motivo_cancelacion', models.TextField(blank=True)),
                ('cancelado_por', models.CharField(blank=True, max_length=100)),
                ('observaciones_cancelacion', models.TextField(blank=True)),
                ('aula_virtual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='aula_virtual.aulavirtual')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='authentication.curso')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
                'db_table': 'reserva',
                'ordering': ['-fecha_reserva', '-hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('reserva_confirmada', 'Reserva Confirmada'), ('reserva_cancelada', 'Reserva Cancelada'), ('recordatorio', 'Recordatorio'), ('mantenimiento', 'Mantenimiento'), ('sistema', 'Sistema')], max_length=30)),
                ('titulo', models.CharField(max_length=200)),
                ('mensaje', models.TextField()),
                ('leida', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_lectura', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
                ('reserva', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to='aula_virtual.reserva')),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'db_table': 'notificacion',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['fecha_reserva', 'aula_virtual'], name='reserva_fecha_r_686048_idx'),
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['user', 'estado'], name='reserva_user_id_59a7fc_idx'),
        ),
    ]
